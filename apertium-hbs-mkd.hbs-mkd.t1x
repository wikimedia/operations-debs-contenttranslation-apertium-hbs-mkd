<?xml version="1.0" encoding="utf-8"?>
<transfer default="chunk">

  <section-def-cats>
    <def-cat n="nom">
      <cat-item tags="n.*"/>
    </def-cat>
    <def-cat n="nom_gen">
      <cat-item tags="n.*.*.gen"/>
      <cat-item tags="n.*.*.gen.*"/>
    </def-cat>
    <def-cat n="nom_ins">
      <cat-item tags="n.*.*.ins"/>
      <cat-item tags="n.*.*.ins.*"/>     
    </def-cat>          
    <def-cat n="nom_loc">
      <cat-item tags="n.*.*.loc"/>
      <cat-item tags="n.*.*.loc.*"/>
    </def-cat>          
    <def-cat n="nom_or_np">
      <cat-item tags="n.*"/>
      <cat-item tags="np.*"/>     
    </def-cat>
    <def-cat n="np">
      <cat-item tags="np.*"/>
    </def-cat>
    <def-cat n="np_nom">
      <cat-item tags="np.*.*.*.nom"/>
    </def-cat>
    <def-cat n="np_nom_non_cog_ant">
      <cat-item tags="np.top.*.*.nom"/>
      <cat-item tags="np.al.*.*.nom"/>
    </def-cat>
    <def-cat n="np_gen">
      <cat-item tags="np.*.*.*.gen"/>
    </def-cat>
    <def-cat n="np_ins">
      <cat-item tags="np.*.*.*.ins"/>
    </def-cat>
    <def-cat n="np_loc">
      <cat-item tags="np.*.*.*.loc"/>
    </def-cat>    
    <def-cat n="vb_lp">
      <cat-item tags="vbser.lp.*"/>
      <cat-item tags="vblex.*.*.lp.*"/>
      <cat-item tags="vbhaver.*.*.lp.*"/>    
      <cat-item tags="vbmod.lp.*"/>    
    </def-cat>
    <def-cat n="vbser_lp">
      <cat-item tags="vbser.lp.*"/>
    </def-cat>
    <def-cat n="vbser_past">
      <cat-item tags="vbser.clt.pres.*"/>
      <cat-item tags="vbser.pres.*"/>     
    </def-cat>
    <def-cat n="vbser_past_clt">
      <cat-item tags="vbser.clt.*"/>
    </def-cat>     
    <def-cat n="vbser_past_emph">
      <cat-item tags="vbser.pres.*"/>
    </def-cat>
    <def-cat n="vbser_cond">
      <cat-item tags="vbser.clt.aor.*"/>
    </def-cat>
    <def-cat n="verb">  
      <cat-item tags="vblex.*"/>
      <cat-item tags="vbser.*"/>
      <cat-item tags="vbmod.*"/>
      <cat-item tags="vbhaver.*"/>
    </def-cat>
    <def-cat n="vbmod">
      <cat-item tags="vbmod.*"/>
    </def-cat>
    <def-cat n="vblex">
      <cat-item tags="vblex.*"/>
    </def-cat>
    <def-cat n="vbser">
      <cat-item tags="vbser.*"/>
    </def-cat>
    <def-cat n="vbpp">
      <cat-item tags="vblex.*.*.pp.*"/>
    </def-cat>
    <def-cat n="vbinf">
      <cat-item tags="vblex.*.*.inf"/>
      <cat-item tags="vblex.*.*.inf.*"/>
      <cat-item tags="vbmod.inf"/>
      <cat-item tags="vbmod.inf.*"/>
      <cat-item tags="vbhaver.*.*.inf"/>
      <cat-item tags="vbhaver.*.*.inf.*"/>
      <cat-item tags="vbser.inf"/>          
      <cat-item tags="vbser.inf.*"/>     
    </def-cat>
    <def-cat n="vbfutI">
      <cat-item lemma="htjeti" tags="vbmod.clt.futI.*"/>
    </def-cat>
    <def-cat n="vbhtjeti">
      <cat-item lemma="htjeti" tags="vbmod.pres.*"/>
      <cat-item lemma="htjeti" tags="vbmod.pii.*"/>     
    </def-cat>
    <def-cat n="vb_treba_mora">
      <cat-item lemma="trebati" tags="*" />
      <cat-item lemma="morati" tags="*" />     
    </def-cat>
    <def-cat n="prns"><!--All pronouns-->
      <cat-item tags="prn"/>
      <cat-item tags="prn.*"/>
    </def-cat>
    <def-cat n="prn"><!--Not demonstrative, and not reflexive possesive se-->
      <cat-item tags="prn.pers.*"/>
      <cat-item tags="prn.pos.*"/>     
      <cat-item tags="prn.ref.pos.*"/>
      <cat-item tags="prn.itg"/>     
      <cat-item tags="prn.itg.*"/>          
      <cat-item tags="prn.rel"/>              
      <cat-item tags="prn.rel.*"/>                   
      <cat-item tags="prn.ind"/>                        
      <cat-item tags="prn.ind.*"/>                        
      <cat-item tags="prn.neg"/>     
      <cat-item tags="prn.neg.*"/>                             
      <cat-item tags="prn.tot"/>          
      <cat-item tags="prn.tot.*"/>          
    </def-cat>
    <def-cat n="prn_rel">
      <cat-item tags="prn.rel.*"/>
    </def-cat>
    <def-cat n="prn_tot">
      <cat-item tags="prn.tot"/>        
      <cat-item tags="prn.tot.*"/>     
    </def-cat>
    <def-cat n="prn_dem">
      <cat-item tags="prn.dem.*"/>
    </def-cat>
    <def-cat n="prn_ref_pers">
      <cat-item tags="prn.ref.pers.*"/>
    </def-cat>
    <def-cat n="rel_prn">
      <cat-item tags="prn.rel.*"/>
    </def-cat>
    <def-cat n="num">  
      <cat-item tags="num"/>     
      <cat-item tags="num.*"/>     
    </def-cat>
    <def-cat n="ord">
      <cat-item tags="num.ord.*"/>
    </def-cat>
    <def-cat n="adv">
      <cat-item tags="adv"/>
      <cat-item tags="adv.*"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
    </def-cat>
    <def-cat n="adj_pst">
      <cat-item tags="adj.pst.*"/>
    </def-cat>
    <def-cat n="adj_pss_sfx">
      <cat-item lemma="pos" tags="adj.*"/>
    </def-cat>
    <def-cat n="adj_comp">
      <cat-item tags="adj.comp.*"/>
    </def-cat>
    <def-cat n="adj_sup">
      <cat-item tags="adj.sup.*"/>
    </def-cat>
    <def-cat n="adj_ssup">
      <cat-item tags="adj.ssup.*"/>
    </def-cat>
    <def-cat n="adj_gen">
      <cat-item tags="adj.*.*.*.gen.*"/>
    </def-cat>
    <def-cat n="adj_ins">
      <cat-item tags="adj.*.*.*.ins.*"/>
    </def-cat>
    <def-cat n="pr">
      <cat-item tags="pr"/>
      <cat-item tags="pr.*"/>
    </def-cat>
    <def-cat n="det">
      <cat-item tags="det"/>
      <cat-item tags="det.*"/>
    </def-cat>
    <def-cat n="exp">
      <cat-item tags="part.exp"/>
    </def-cat>
    <def-cat n="ne_part">
      <cat-item lemma ="ne" tags="part.neg"/>
    </def-cat>  
    <def-cat n="li_part">
      <cat-item lemma ="li" tags="part.itg"/>
    </def-cat>  
    <def-cat n="kako_adv">
      <cat-item lemma="kako" tags="adv"/>
      <cat-item lemma="kako" tags="cnjsub"/>
    </def-cat>  
    <def-cat n="vblex_lp">
      <cat-item tags="vblex.*.*.lp.*"/>
      <cat-item tags="vbhaver.*.*.lp.*"/>    
      <cat-item tags="vbmod.lp.*"/>    
    </def-cat>  
    <def-cat n="prn_clt">
      <cat-item lemma="clitic" tags="*"/>
    </def-cat>  
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="np"/>
      <attr-item tags="np.ant"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.cog"/>     
      <attr-item tags="np.al"/>
    </def-attr>

    <def-attr n="a_num">
      <attr-item tags="num"/>
      <attr-item tags="num.ord"/>
    </def-attr>

    <def-attr n="a_prp">
      <attr-item tags="pr"/>
    </def-attr>

    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.itg"/>
    </def-attr>

    <def-attr n="a_vrb">
      <attr-item tags="vblex"/>
      <attr-item tags="vbhaver"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbser.clt"/>
      <attr-item tags="vbmod"/>          
    </def-attr>

    <def-attr n="a_adv">
      <attr-item tags="adv"/>
    </def-attr>
    
    <def-attr n="a_deg">
      <attr-item tags="pst"/>
      <attr-item tags="comp"/>     
      <attr-item tags="sup"/>     
      <attr-item tags="ssup"/>
    </def-attr>

    <def-attr n="a_prn">
      <attr-item tags="prn"/>
      <attr-item tags="prn.neg"/>     
      <attr-item tags="prn.pos"/>
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.itg"/>
      <attr-item tags="prn.dem"/>
      <attr-item tags="prn.pers"/>
      <attr-item tags="prn.pers.clt"/>
      <attr-item tags="prn.tot"/>
      <attr-item tags="prn.ref.pers"/>
      <attr-item tags="prn.ref.pos"/>
      <attr-item tags="prn.rel"/>
    </def-attr>

    <def-attr n="trn">
      <attr-item tags="tv"/>
      <attr-item tags="iv"/>
      <attr-item tags="ref"/>     
    </def-attr>


    <def-attr n="asp">
      <attr-item tags="perf"/>
      <attr-item tags="imperf"/>
    </def-attr>

    <def-attr n="tns">
      <attr-item tags="inf"/>
      <attr-item tags="pres"/>
      <attr-item tags="lp"/>
      <attr-item tags="lp.aor"/>
      <attr-item tags="lp.pii"/>
      <attr-item tags="opt"/>
      <attr-item tags="imp"/>
      <attr-item tags="aor"/>
      <attr-item tags="pii"/>
      <attr-item tags="pprs"/>
      <attr-item tags="clt.futI"/>     
      <attr-item tags="futI"/>
      <attr-item tags="futII"/>     
      <attr-item tags="fti"/>
      <attr-item tags="past"/>
    </def-attr>

    <def-attr n="gen">
      <attr-item tags="mi"/>
      <attr-item tags="ma"/>
      <attr-item tags="m"/>
      <attr-item tags="f"/>
      <attr-item tags="nt"/>
      <attr-item tags="mfn"/>
      <attr-item tags="mf"/>
    </def-attr>

    <def-attr n="prs">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>

    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
    </def-attr>

    <def-attr n="cas">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>
      <attr-item tags="dat"/>
      <attr-item tags="gen"/>
      <attr-item tags="loc"/>
      <attr-item tags="ins"/>
      <attr-item tags="voc"/>
    </def-attr>

    <def-attr n="def">
      <attr-item tags="ind"/>
      <attr-item tags="def"/>
      <attr-item tags="dst"/>     
      <attr-item tags="prx"/>
    </def-attr>
    
    <def-attr n="fnc">
      <attr-item tags="@N←"/>
      <attr-item tags="@N→"/>
      <attr-item tags="@A←"/>
      <attr-item tags="@Adv←"/>
    </def-attr>

  </section-def-attrs>

  <section-def-vars>
    <def-var n="numero" v="&lt;sg&gt;"/>
    <def-var n="genere" v="&lt;nt&gt;"/>
    <def-var n="persona" v="&lt;p3&gt;"/>  
    <def-var n="conditional" v="False"/>    
  </section-def-vars>

  <section-def-macros>
    <!--convenience TODO: Sort the macros by function or smtn-->
    <def-macro n="article_assign" npar="2">
      <!--Parameter 1: the demonstrative pronoun-->
      <!--Parameter 2: word to be assigned definiteness-->
      <choose>
        <when>
	  <test><equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="тој"/></equal></test>
	  <let><clip pos="2" side="tl" part="def"/><lit-tag v="def"/></let>
        </when> 
        <when>
	  <test><equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="овој"/></equal></test>
	  <let><clip pos="2" side="tl" part="def"/><lit-tag v="prx"/></let>
        </when>                    
        <when>
	  <test><equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="оној"/></equal></test>
	  <let><clip pos="2" side="tl" part="def"/><lit-tag v="dst"/></let>
        </when>                            
      </choose>
    </def-macro>

    <def-macro n="to_aorist" npar="1">
      <!--Takes a verb and spits out it's aorist-->
      <!--The aorist is created according to the two variables in memory-->    
      <let>
        <clip pos="1" side="tl" part="whole"/>
        <concat>
	  <clip pos="1" side="tl" part="lemh"/>
	  <clip pos="1" side="tl" part="a_vrb"/>
	  <clip pos="1" side="tl" part="asp"/>            
	  <clip pos="1" side="tl" part="trn"/>            
	  <lit-tag v="aor"/>
	  <var n="persona"/>
	  <var n="numero"/>
	  <clip pos="1" side="tl" part="lemq"/>                       
        </concat>
      </let>
    </def-macro>

    <def-macro n="num_adapter" npar="1">
      <call-macro n="mima_to_m"><with-param pos="1"/></call-macro>
      <call-macro n="to_mfn"><with-param pos="1"/></call-macro>
      <call-macro n="case_normalise"><with-param pos="1"/></call-macro>        
      <choose>
	<when><!--When it's not an ordinal number-->
	  <test>
	    <and>
	      <not><equal><clip pos="1" side="tl" part="a_num"/><lit-tag v="num.ord"/></equal></not>
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="oba"/></equal></not>
	      <not>
		<equal>
		  <clip pos="1" side="tl" part="whole"/>
		  <concat>
		    <clip pos="1" side="tl" part="lemh"/>
		    <lit-tag v="num"/>
		    <clip pos="1" side="tl" part="lemq"/>
		  </concat>
		</equal>
	      </not>
	    </and>
	  </test>
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="nom.ind"/></let>
	</when>
	<when><!--When it is an ordinal number-->
	  <test>
	    <equal><clip pos="1" side="tl" part="a_num"/><lit-tag v="num.ord"/></equal>                    
	  </test>
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="nom.def"/></let>                    
	</when>                
	<when><!--When it is an 'oba' number-->
	  <test>
	    <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="oba"/></equal>                    
	  </test>                
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="nom.def"/></let>                    
	</when>
      </choose>
      
    </def-macro>

    <def-macro n="case_normalise" npar="1">
      <let><clip pos="1" side="tl" part="cas"/><lit-tag v="nom"/></let>
    </def-macro>

    <def-macro n="prn_adapter" npar="1">
      <call-macro n="mima_to_m"><with-param pos="1"/></call-macro>
      <call-macro n="to_mfn"><with-param pos="1"/></call-macro>
      <call-macro n="prn_case_contract"><with-param pos="1"/></call-macro>
      <choose>
	<when>
	  <test><!--If it's a relative pronoun što -->
	    <and>
	      <or>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="što"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="ništa"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="svašta"/></equal>                        
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="bilo što"/></equal>                                                
		
	      </or>
	      <or>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.itg"/></equal> 
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.rel"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.neg"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.ind"/></equal>                          
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.tot"/></equal>                          
	      </or>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prn"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>
	<when>
	  <test><!--If it's a relative pronoun koj -->
	    <and>
	      <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="koji"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.rel"/></equal>
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="gen"/><lit-tag v="mi"/></equal></not>
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="gen"/><lit-tag v="ma"/></equal></not>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prn"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <lit-tag v="nom"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>
	<when>
	  <test>
	    <and><!--If it's a totalising pronoun 'sav'-->
	      <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="sav"/></equal>                      
	      <equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.tot"/></equal>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prn"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>                    
	      <lit-tag v="def"/>                                        
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>
	<when>
	  <test>
	    <or>
	      <equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.ref.pos"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.pos"/></equal>
	      <!--equal><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.itg"/></equal-->                          
	    </or>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prn"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <lit-tag v="ind"/><!--Indefinite by default, but definite if in front of a noun/adjective-->                     
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>            
	<when>
	  <test>
	    <and>
	      <or>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="koliki"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="kakav"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="onolik"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="ovolik"/></equal>                             
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="tolik"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="nikakav"/></equal>                             
		<equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="svakakav"/></equal>                             
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="некаков"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="никаков"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="овој"/></equal>                             
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="оној"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="тој"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="олкав"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="онолкав"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="толкав"/></equal>                              
	      </or>
	      <or>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.itg"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.ind"/></equal>                              
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.rel"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.tot"/></equal>                              
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.neg"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.dem"/></equal>                              
	      </or>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prn"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>
	<when><!--Only personal pronouns have real dative and accusative in plural-->            
	  <test><!--Others get normalised to nominative-->            
	    <and><!--Added: also neuter and feminine singular nouns-->
	      <or>
		<equal caseless="yes"><clip pos="1" side="tl" part="nbr"/><lit-tag v="pl"/></equal>
		<and>
		  <equal caseless="yes"><clip pos="1" side="tl" part="nbr"/><lit-tag v="sg"/></equal>
		  <or>
		    <equal caseless="yes"><clip pos="1" side="tl" part="gen"/><lit-tag v="nt"/></equal>
		    <equal caseless="yes"><clip pos="1" side="tl" part="gen"/><lit-tag v="f"/></equal>
		  </or>
		</and>
	      </or>
	      <not>
		<or>
		  <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="free"/></equal>
		  <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="clitic"/></equal>
		</or>
	      </not>
	      <or><!--These are the pronouns which have a case marked in plural-->
		<!--Note: this goes before (čiji,чиј), not to mess it up-->
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="кој"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="којшто"/></equal>                            
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="било кој"/></equal>                            
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="некој"/></equal>                            
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="по некој"/></equal>                            
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="никој"/></equal>                            
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="секој"/></equal>                            
	      </or>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="cas"/><lit-tag v="nom"/>
	  </let>
	</when>   
	<when>
	  <test>
	    <or>
	      <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="čiji"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="nečiji"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="ničiji"/></equal>
	    </or>
	  </test>
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="gen"/></let>
	</when>   
	<when>
	  <test>
	    <equal caseless="yes"><clip pos="1" side="sl" part="a_prn"/><lit-tag v="prn.dem"/></equal>
	  </test>
	  <choose>
	    <when>
	      <test>
		<or>
		  <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="тој"/></equal>
		  <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="овој"/></equal>                                                
		  <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="оној"/></equal>                      
		</or>
	      </test>
	      <let>
		<clip pos="1" side="tl" part="whole"/>
		<concat>
		  <clip pos="1" side="tl" part="lemh"/>
		  <clip pos="1" side="tl" part="a_prn"/>
		  <clip pos="1" side="tl" part="gen"/>
		  <clip pos="1" side="tl" part="nbr"/>
		  <clip pos="1" side="tl" part="lemq"/>
		</concat>
	      </let>
	    </when>
	    <otherwise>
	      <let>
		<clip pos="1" side="tl" part="whole"/>
		<concat>
		  <clip pos="1" side="tl" part="lemh"/>
		  <clip pos="1" side="tl" part="a_prn"/>
		  <clip pos="1" side="tl" part="gen"/>
		  <clip pos="1" side="tl" part="nbr"/>
		  <lit-tag v="ind"/>                             
		  <clip pos="1" side="tl" part="lemq"/>
		</concat>
	      </let>
	    </otherwise>
	  </choose>
	</when>
	<when><!--This should be a list of lemmas that don't have any definiteness at the end-->
	  <test>
	    <or>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="clitic"/></equal>                        
	      <and>
		<equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="free"/></equal>
		<not>
		  <equal><clip pos="1" side="tl" part="a_prn"/><lit v="prn.ref.pos"/></equal>
		</not>
	      </and>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="бидејќи"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="било кој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="затоа што"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="зашто"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="зошто"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="каде"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="каде што"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="како"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="каков"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="како што"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="кога"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="кога што"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="кој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="којшто"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="колкав"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="колку"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="колку што"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="некаков"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="по некој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="некој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="никаков"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="никој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="николку"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="ништо"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="овој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="олкав"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="оној"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="онолкав"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="поради што"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="сѐ"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="секаков"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="секој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="сешто"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="тој"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="толкав"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="што"/></equal>
	    </or>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prn"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="cas"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>
	<when><!--When it's nešto which is translated as a noun-->            
	  <test>
	    <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="нешто"/></equal>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <lit-tag v="n.nt.sg.nom.ind"/>
	    </concat>
	  </let>
	</when>
	<otherwise><!--The default thing to do-->
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prn"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="cas"/>
	      <clip pos="1" side="tl" part="def"/>                     
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</otherwise>
      </choose>
    </def-macro>

    <def-macro n="adv_adapter" npar="1">
      <!--The parameter: the adv to be converted-->
      <!--output: the adv in the converted format in TL-->
      <choose>
	<when>
	  <test>
	    <equal><clip pos="1" side="sl" part="a_deg"/><lit-tag v="ssup"/></equal>        
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <lit v="adj"/>
	      <lit-tag v="pref"/>
	      <clip pos="1" side="sl" part="a_deg"/>
	      <lit v="+"/>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_adv"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when> 
	<when>
	  <test>
	    <or>
	      <equal><clip pos="1" side="sl" part="a_deg"/><lit-tag v="comp"/></equal>        
	      <equal><clip pos="1" side="sl" part="a_deg"/><lit-tag v="sup"/></equal>        
	    </or>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <lit v="adj"/>
	      <lit-tag v="pref"/>
	      <clip pos="1" side="sl" part="a_deg"/>
	      <lit v="+"/>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_adv"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>
	<otherwise>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_adv"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</otherwise>
      </choose>
    </def-macro>

    <def-macro n="adj_adapter" npar="1">
      <!--The parameter: the adjective to be converted-->
      <!--output: the adjective in the converted format in TL-->
      <choose>
        <when>
	  <test>
	    <not><equal caseless="yes"><clip pos="1" side="sl" part="lemh"/><lit v="mnogi"/></equal></not>
	  </test>
	  <call-macro n="mima_to_m"><with-param pos="1"/></call-macro>
	  <call-macro n="to_mfn"><with-param pos="1"/></call-macro>
	  <call-macro n="case_normalise"><with-param pos="1"/></call-macro>            
	  <choose>
	    <when>
	      <test>
                <equal><clip pos="1" side="sl" part="a_deg"/><lit-tag v="pst"/></equal>        
	      </test>
	      <let>
		<clip pos="1" side="tl" part="whole"/>            
		<concat>            
		  <clip pos="1" side="tl" part="lemh"/>
		  <clip pos="1" side="tl" part="a_adj"/>
		  <clip pos="1" side="tl" part="gen" />
		  <clip pos="1" side="tl" part="nbr" />
		  <lit-tag v="nom" />
		  <clip pos="1" side="sl" part="def"/>
		  <clip pos="1" side="tl" part="lemq"/>
		</concat>
	      </let> 
	    </when>
	    <when>
	      <test>
		<equal><clip pos="1" side="sl" part="a_deg"/><lit-tag v="ssup"/></equal>        
	      </test>
	      <let>
		<clip pos="1" side="tl" part="whole"/>
		<concat>
		  <lit v="adj"/>
		  <lit-tag v="pref"/>
		  <clip pos="1" side="sl" part="a_deg"/>
		  <lit v="+"/>
		  <clip pos="1" side="tl" part="lemh"/>
		  <clip pos="1" side="tl" part="a_adj"/>
		  <clip pos="1" side="tl" part="gen" />
		  <clip pos="1" side="tl" part="nbr" />             
		  <lit-tag v="nom" />             
		  <clip pos="1" side="sl" part="def"/>
		  <clip pos="1" side="tl" part="lemq"/>
		</concat>
	      </let>
	    </when> 
	    <when>
              <test>
                <or>
                  <equal><clip pos="1" side="sl" part="a_deg"/><lit-tag v="comp"/></equal>        
                  <equal><clip pos="1" side="sl" part="a_deg"/><lit-tag v="sup"/></equal>        
                </or>
	      </test>
	      <let>
		<clip pos="1" side="tl" part="whole"/>
		<concat>
		  <lit v="adj"/>
		  <lit-tag v="pref"/>
		  <clip pos="1" side="sl" part="a_deg"/>
		  <lit v="+"/>
		  <clip pos="1" side="tl" part="lemh"/>
		  <clip pos="1" side="tl" part="a_adj"/>
		  <clip pos="1" side="tl" part="gen" />
		  <clip pos="1" side="tl" part="nbr" />             
		  <lit-tag v="nom.def" />                          
		  <clip pos="1" side="tl" part="lemq"/>
		</concat>
	      </let>
	    </when>
	  </choose>
        </when>
        <otherwise>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_adv"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
        </otherwise>        
      </choose>
    </def-macro>

    <def-macro n="verb_adapter" npar="1">
      <choose>        
	<when><!--If it's a vbser or a conditional aorist we need to memorise the person and number to transfer to consequent lps-->
	  <test>
	    <or>
	      <and>
		<or>
		  <equal caseless="yes"><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbser.clt"/></equal>
		  <equal caseless="yes"><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbser"/></equal>                        
		</or>
		<equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="pres"/></equal>                        
	      </and>
	      <and>
		<equal caseless="yes"><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbser.clt"/></equal>
		<equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="aor"/></equal>                            
	      </and>
	    </or> 
	  </test>
	  <let><var n="numero"/><clip pos="1" side="sl" part="nbr"/></let>
	  <let><var n="persona"/><clip pos="1" side="sl" part="prs"/></let>                   
	  <choose>
	    <when>
	      <test>
		<and>
		  <equal caseless="yes"><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbser.clt"/></equal>
		  <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="aor"/></equal>
		</and>
	      </test>
	      <let><var n="conditional"/><lit v="True"/></let>
	    </when>
	    <otherwise>                    
	      <let><var n="conditional"/><lit v="False"/></let>
	    </otherwise>                    
	  </choose>
	</when>        
	<when>
	  <test><!--If we have infinitive, we normalise it to present-->                    
	    <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="inf"/></equal>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_vrb"/>                        
	      <clip pos="1" side="tl" part="asp"/>                                                
	      <clip pos="1" side="tl" part="trn"/>                                                                        
	      <lit-tag v="pres.p3.sg"/>
	      <clip pos="1" side="tl" part="lemq"/>                        

	    </concat>
	  </let>
	</when>       
	<when>
	  <test><!--If we have infinitive of vbser, same thing though a little more complicated-->                    
	    <and>
	      <equal caseless="yes"><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbser"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="inf"/></equal>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <lit-tag v="vbser.pres.p3.sg"/>
	      <clip pos="1" side="tl" part="lemq"/>                        
	    </concat>
	  </let>
	</when>       
	<when>
	  <test>
	    <and><!--Temporary rule for futureII, till a better solution-->
	      <equal caseless="yes"><clip pos="1" side="sl" part="а_vrb"/><lit-tag v="vbser"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="futII"/></equal>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <lit v="ќе"/>
	      <lit-tag v="part"/>
	    </concat>
	  </let>
	</when>       
	<when>
	  <test>
	    <and>
	      <equal caseless="yes"><clip pos="1" side="sl" part="а_vrb"/><lit-tag v="vbser"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="pprs"/></equal>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <lit v="биде"/>
	      <lit-tag v="vbser"/>
	      <lit-tag v="pprs"/>
	      <lit-tag v="adv"/>
	    </concat>
	  </let>
	</when>       
	<when><!--Note: macedonian doesn't have pprs for perfective verbs, so it needs to be translated 'descriptively'-->
	  <test><!--in example: Ušavši u kuću vidio je čovjeka => Откако влезе го виде човекот-->
	    <and><!--So for now I'll translate it as aorist, with the person and gender from the variable-->
	      <or>
		<equal caseless="yes"><clip pos="1" side="tl" part="a_vrb"/><lit-tag v="vblex"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="a_vrb"/><lit-tag v="vbmod"/></equal>
	      </or>
	      <equal caseless="yes"><clip pos="1" side="tl" part="asp"/><lit-tag v="perf"/></equal>                    
	      <equal caseless="yes"><clip pos="1" side="tl" part="tns"/><lit-tag v="pprs"/></equal>
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_vrb"/>
	      <clip pos="1" side="tl" part="asp"/>
	      <clip pos="1" side="tl" part="trn"/>
	      <lit-tag v="aor"/>
	      <var n="persona"/>
	      <var n="numero"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </concat>
	  </let>
	</when>    
	<when>
	  <test>
	    <and>
	      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="сака"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbmod"/></equal>
	      <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="clt.futI"/></equal>                    
	    </and>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <lit v="ќе"/><lit-tag v="part"/>
	    </concat>
	  </let>
	</when>       
	<when><!--This normalises optative to lp, since optative is rare.--><!--TODO: implement macedonian optative-->
	  <test>
	    <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="opt"/></equal>
	  </test>
	  <let><clip pos="1" side="tl" part="tns"/><lit-tag v="lp"/></let>
	  <let><clip pos="1" side="sl" part="tns"/><lit-tag v="lp"/></let>
	  <choose><!--Moreover, if it's vbser-->
	    <when>
	      <test>
		<equal caseless="yes"><clip pos="1" side="tl" part="a_vrb"/><lit-tag v="vbser"/></equal>
	      </test>
	      <let><clip pos="1" side="tl" part="lem"/><lit v="е"/></let>
	      <let><clip pos="1" side="tl" part="tns"/><lit-tag v="lp.pii"/></let>                        
	    </when>
	  </choose>
	</when>       
	<when><!--For imperative the tags need to be rearranged, or for the second person the analytical construction.-->
	  <test>
	    <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="imp"/></equal>
	  </test>
	  <choose>
	    <when>
	      <test>
		<or>
		  <and>
		    <equal caseless="yes"><clip pos="1" side="sl" part="prs"/><lit-tag v="p1"/></equal>
		    <equal caseless="yes"><clip pos="1" side="sl" part="nbr"/><lit-tag v="pl"/></equal>
		  </and>
		  <and>
		    <or>
		      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="може"/></equal>
		      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="мора"/></equal>
		      <equal caseless="yes"><clip pos="1" side="tl" part="lem"/><lit v="треба"/></equal>                                    
		    </or>
		    <equal caseless="yes"><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbmod"/></equal>                            
		  </and>
		</or>
	      </test>
	      <let>
		<clip pos="1" side="tl" part="whole"/>
		<concat><!--TODO: for now normalises to present, to be expanded-->
		  <clip pos="1" side="tl" part="lem"/>
		  <clip pos="1" side="tl" part="a_vrb"/>
		  <clip pos="1" side="tl" part="asp"/>
		  <clip pos="1" side="tl" part="trn"/>
		  <lit-tag v="pres"/>
		  <clip pos="1" side="tl" part="prs"/>
		  <clip pos="1" side="tl" part="nbr"/>                            
		</concat>
	      </let>
	    </when>
	    <otherwise>
	      <let>
		<clip pos="1" side="tl" part="whole"/>
		<concat>
		  <clip pos="1" side="tl" part="lem"/>
		  <clip pos="1" side="tl" part="a_vrb"/>
		  <clip pos="1" side="tl" part="asp"/>
		  <clip pos="1" side="tl" part="trn"/>
		  <lit-tag v="imp"/>
		  <clip pos="1" side="tl" part="nbr"/>                            
		</concat>
	      </let>
	    </otherwise>
	  </choose>
	</when>
	<when>
	  <test>
	    <equal><clip pos="1" side="tl" part="tns"/><lit-tag v="lp"/></equal>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_vrb"/>
	      <clip pos="1" side="tl" part="asp"/>
	      <clip pos="1" side="tl" part="trn"/>
	      <clip pos="1" side="tl" part="tns"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>                        
	    </concat>
	  </let>                                    
	</when>             
      </choose>  
      <call-macro n="to_mfn"><with-param pos="1"/></call-macro>
      <call-macro n="assign-past-tense"><with-param pos="1"/></call-macro>        
    </def-macro>
    
    <def-macro n="assign-past-tense" npar="1">    
      <choose>
        <when>
          <test>
            <and>         
	      <equal caseless="yes"><clip pos="1" side="tl" part="tns"/><lit-tag v="lp"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="asp"/><lit-tag v="perf"/></equal>
            </and>
          </test>
	  <let><clip pos="1" side="tl" part="tns"/><lit-tag v="lp.aor"/></let>
        </when>
        <when>
          <test>
            <and>         
	      <equal caseless="yes"><clip pos="1" side="tl" part="tns"/><lit-tag v="lp"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="asp"/><lit-tag v="imperf"/></equal>
            </and>
          </test>
	  <let><clip pos="1" side="tl" part="tns"/><lit-tag v="lp.pii"/></let>
        </when>
        <when>
          <test>
            <and>         
	      <equal caseless="yes"><clip pos="1" side="tl" part="tns"/><lit-tag v="lp"/></equal>
	      <or>
		<equal caseless="yes"><clip pos="1" side="tl" part="a_vrb"/><lit-tag v="vbser"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="a_vrb"/><lit-tag v="vbhaver"/></equal>
		<equal caseless="yes"><clip pos="1" side="tl" part="a_vrb"/><lit-tag v="vbmod"/></equal>
	      </or>
            </and>
          </test>
	  <let><clip pos="1" side="tl" part="tns"/><lit-tag v="lp.pii"/></let>
        </when>
      </choose>        
    </def-macro>
    
    <def-macro n="noun_adapter" npar="1">
      <call-macro n="mima_to_m"><with-param pos="1"/></call-macro>
      <call-macro n="case_normalise"><with-param pos="1"/></call-macro>
      <!--let><var n="genNom"/><clip pos="1" side="tl" part="gen"/></let--><!--record gender for adjectives that are astray, an incomplete idea-->
      <choose>
	<when><!--Proper nouns are exclusively singular in the mk monodix, while in sh this is not the case-->
	  <test>
	    <or>
	      <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np"/></equal>
	      <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np.cog"/></equal>
	      <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np.top"/></equal>                                                  
	      <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np.ant"/></equal>
	      <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np.al"/></equal>                                                      
	    </or>
	  </test>
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_nom"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <lit-tag v="sg"/>
	      <lit-tag v="nom"/>
	      <clip pos="1" side="tl" part="lemq"/>                        
	    </concat>                
	  </let>
	</when>
	<when><!--This to remove the @N← and such tags from <n>-s. At least it should be.-->
	  <test>
	    <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="n"/></equal>               
	  </test>                
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_nom"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>                        
	      <lit-tag v="nom.ind"/>
	      <clip pos="1" side="tl" part="lemq"/>                        
	    </concat>
	  </let>                
	</when>
	<when><!--This to remove the @N← and such tags from <np>-s-->
	  <test>
	    <equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="np"/></equal>               
	  </test>                
	  <let>
	    <clip pos="1" side="tl" part="whole"/>
	    <concat>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_nom"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>                        
	      <lit-tag v="nom"/>
	      <clip pos="1" side="tl" part="lemq"/>                        
	    </concat>
	  </let>
	</when>                        
      </choose>
    </def-macro>  
    
    <def-macro n="prn_case_contract" npar="1">
      <choose> <!--Throws locative into dative, since it's the equivalent category-->
        <when>
          <test>
            <equal caseless="yes"><clip pos="1" side="sl" part="cas"/><lit-tag v="loc"/></equal>
          </test>
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="dat"/></let>
        </when>
        <when>
          <test>
	    <equal caseless="yes"><clip pos="1" side="sl" part="cas"/><lit-tag v="voc"/></equal>                
          </test>
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="nom"/></let>
        </when>
        <when>
          <test>
	    <equal caseless="yes"><clip pos="1" side="sl" part="cas"/><lit-tag v="ins"/></equal>                
          </test>
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="acc"/></let>
        </when>        
        <when>
          <test><!--Throws genitive into accusative, since it's the equivalent category.-->
	    <!--This mustn't happen alyways, since it'll spoil the generation of 'genitive' possesive pronouns in the mk monodix-->           
            <and>
	      <equal caseless="yes"><clip pos="1" side="sl" part="cas"/><lit-tag v="gen"/></equal>
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="кој"/></equal></not>
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="којшто"/></equal></not>
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="било кој"/></equal></not>
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="некој"/></equal></not>                                    
	      <not><equal caseless="yes"><clip pos="1" side="sl" part="lem"/><lit v="никој"/></equal></not>                        
            </and>
          </test>
	  <let><clip pos="1" side="tl" part="cas"/><lit-tag v="acc"/></let>
        </when>
      </choose>
    </def-macro>  

    <def-macro n="adjust_headword_agreement" npar="2">
      <!--first parameter is the headword-->
      <!--second parameter is the word to be adjusted-->    
      <choose>
        <when>
          <test>
            <and>
              <or>
		<equal caseless="yes"><clip pos="2" side="sl" part="a_adj"/><lit-tag v="adj"/></equal>
		<equal caseless="yes"><clip pos="2" side="sl" part="a_num"/><lit-tag v="num.ord"/></equal>
              </or>
              <equal caseless="yes"><clip pos="1" side="sl" part="nbr"/><lit-tag v="pl"/></equal>
            </and>
          </test>
	  <let><clip pos="2" side="tl" part="gen"/><lit-tag v="mfn"/></let>
	  <let><clip pos="2" side="tl" part="nbr"/><clip pos="1" side="tl" part="nbr"/></let>
        </when>
        <otherwise>
	  <let><clip pos="2" side="tl" part="gen"/><clip pos="1" side="tl" part="gen"/></let>
	  <let><clip pos="2" side="tl" part="nbr"/><clip pos="1" side="tl" part="nbr"/></let>
	</otherwise>
      </choose>

    </def-macro>  


    <def-macro n="num_phrase_agreement" npar="2">
      <!--the first parameter is the number-->
      <!--the second is the word to adjust agreement-->
      <choose>
        <when>
          <test>
            <equal caseless="yes"><clip pos="2" side="sl" part="cas"/><lit-tag v="gen"/></equal>
          </test>
	  <let><clip pos="2" side="tl" part="nbr"/><lit-tag v="pl"/></let>
	  <let><clip pos="2" side="tl" part="cas"/><clip pos="1" side="tl" part="cas"/></let>
        </when>
      </choose>
    </def-macro>  

    <def-macro n="lp_default_aspect" npar="1">
      <choose>
        <when>
          <test><!--If this is an lp-->
            <equal caseless="yes"><clip pos="1" side="sl" part="tns"/><lit-tag v="lp"/></equal>
          </test><!--Take the aorist variant, the imperfective is used only for reported past-future (прекажано минато-идно)-->
          <let><clip pos="1" side="tl" part="tns"/><lit-tag v="lp.aor"/></let>
        </when>
      </choose>
    </def-macro>  


    <def-macro n="mima_to_m" npar="1">
      <choose><!--If the word translates to the target language as masculine (and not feminine or nt), the target language tag is changed from mi/ma -> m -->
        <when>
          <test>
            <or>                
	      <equal caseless="yes"><clip pos="1" side="tl" part="gen"/><lit-tag v="mi"/></equal>
	      <equal caseless="yes"><clip pos="1" side="tl" part="gen"/><lit-tag v="ma"/></equal>
            </or>
          </test>          
          <let><clip pos="1" side="tl" part="gen"/><lit-tag v="m"/></let>
        </when>
      </choose>
    </def-macro>

    <def-macro n="to_mfn" npar="1">
      <choose><!--If the parameter is nota <n> it's gender is changed to <mfn> to match macedonian-->
        <when>
          <test>
	    <and>         
	      <equal caseless="yes"><clip pos="1" side="tl" part="nbr"/><lit-tag v="pl"/></equal>
	      <not><equal><clip pos="1" side="tl" part="a_nom"/><lit-tag v="n"/></equal></not>
	    </and>
          </test>
          <let><clip pos="1" side="tl" part="gen"/><lit-tag v="mfn"/></let>
        </when>
      </choose>
    </def-macro>


  </section-def-macros>

  <section-rules>
    <!--Rules for verbs-->
    <rule comment="regla: verb adv vbinf">
      <pattern>
	<pattern-item n="verb"/>
	<pattern-item n="adv"/>      
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="adv_adapter"><with-param pos="2"/></call-macro> 
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>   
	<out>
	  <chunk name="verb_adv_inf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b />
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>             
	      <clip pos="3" side="tl" part="asp"/>             
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vbftI prn_ref_pers vbinf"><!--TODO: Cover future negative, this has but others not-->
      <pattern><!-- ću se gledati ==> ќе се гледам -->
	<pattern-item n="vbfutI"/>
	<pattern-item n="prn_ref_pers"/>       
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="prn_adapter"><with-param pos="2"/></call-macro>    
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>

	<let><clip pos="3" side="tl" part="prs"/><clip pos="1" side="sl" part="prs"/></let>
	<let><clip pos="3" side="tl" part="nbr"/><clip pos="1" side="sl" part="nbr"/></let>    
	<out>
	  <chunk name="fti_prn_ref_pers_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <lit v="ќе"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>           
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: ne_part vbfutI prn_clt vbinf">
      <pattern><!-- neću se gledati ==> нема да се гледам -->
	<pattern-item n="ne_part"/>
	<pattern-item n="vbfutI"/>
	<pattern-item n="prn_clt"/>       
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="prn_adapter"><with-param pos="3"/></call-macro>    
	<call-macro n="verb_adapter"><with-param pos="4"/></call-macro>

	<let><clip pos="4" side="tl" part="prs"/><clip pos="2" side="sl" part="prs"/></let>
	<let><clip pos="4" side="tl" part="nbr"/><clip pos="2" side="sl" part="nbr"/></let>    
	<out>
	  <chunk name="ne_part_vbfutI_prn_clt_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <lit v="нема"/>
	      <lit-tag v="vbhaver"/>
	      <lit-tag v="pres"/>
	      <lit-tag v="p3"/>
	      <lit-tag v="sg"/>                                                    
	    </lu>
	    <b pos="1"/>
	    <lu>                  
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>                  
	    <b pos="2"/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="4" side="tl" part="whole"/>
	    </lu>
	    <b pos="3"/>           
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: ne_part vbfutI prn_clt prn_clt vbinf">
      <pattern><!-- neću joj ga gledati ==> нема да и го гледам -->
	<pattern-item n="ne_part"/>
	<pattern-item n="vbfutI"/>
	<pattern-item n="prn_clt"/>       
	<pattern-item n="prn_clt"/>       
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="prn_adapter"><with-param pos="3"/></call-macro>    
	<call-macro n="prn_adapter"><with-param pos="4"/></call-macro> 
	<call-macro n="verb_adapter"><with-param pos="5"/></call-macro>

	<let><clip pos="5" side="tl" part="prs"/><clip pos="2" side="sl" part="prs"/></let>
	<let><clip pos="5" side="tl" part="nbr"/><clip pos="2" side="sl" part="nbr"/></let>    
	<out>
	  <chunk name="ne_part_vbfutI_prn_clt_prn_clt_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <lit v="нема"/>
	      <lit-tag v="vbhaver"/>
	      <lit-tag v="pres"/>
	      <lit-tag v="p3"/>
	      <lit-tag v="sg"/>                                                    
	    </lu>
	    <b pos="1"/>
	    <lu>                  
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>                  
	    <b pos="2"/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b pos="3"/>           
	    <lu>
	      <clip pos="4" side="tl" part="whole"/>
	    </lu>
	    <b pos="4"/>           
	    <lu>
	      <clip pos="5" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vbfutI vbinf">
      <pattern><!-- ću gledati ==> ќе гледам -->
	<pattern-item n="vbfutI"/>
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
	<let><clip pos="2" side="tl" part="prs"/><clip pos="1" side="sl" part="prs"/></let>
	<let><clip pos="2" side="tl" part="nbr"/><clip pos="1" side="sl" part="nbr"/></let>    
	<out>
	  <chunk name="vbftI_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <lit v="ќе"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vbinf ftI prn_ref_pers">
      <pattern><!-- okrenut ću se ==> ќе се обрнам -->
	<pattern-item n="vbinf"/>
	<pattern-item n="vbfutI"/>
	<pattern-item n="prn_ref_pers"/>              
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>    
	<call-macro n="prn_adapter"><with-param pos="3"/></call-macro>        
	
	<let><clip pos="1" side="tl" part="prs"/><clip pos="2" side="sl" part="prs"/></let>
	<let><clip pos="1" side="tl" part="nbr"/><clip pos="2" side="sl" part="nbr"/></let>    
	<out>
	  <chunk name="vbinf_ftI_prn_ref_pers" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <lit v="ќе"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vbinf vbfutI">
      <pattern><!-- gledat ću ==> ќе гледам -->
	<pattern-item n="vbinf"/>
	<pattern-item n="vbfutI"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>    
	
	<let><clip pos="1" side="tl" part="prs"/><clip pos="2" side="sl" part="prs"/></let>
	<let><clip pos="1" side="tl" part="nbr"/><clip pos="2" side="sl" part="nbr"/></let>    
	<out>
	  <chunk name="vbinf_vbfutI" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <lit v="ќе"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vb_treba_mora vbinf">
      <pattern><!-- morate tjerati -> мора да терате -->
	<pattern-item n="vb_treba_mora"/>
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro> 
        
	<let><clip pos="1" side="tl" part="prs"/><lit-tag v="p3"/></let>
	<let><clip pos="1" side="tl" part="nbr"/><lit-tag v="sg"/></let>    
	<out>
	  <chunk name="vb_treba_mora_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>          
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>        
	      <clip pos="2" side="tl" part="a_vrb"/>
	      <clip pos="2" side="tl" part="asp"/>            
	      <clip pos="2" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="sl" part="prs"/>
	      <clip pos="1" side="sl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vb_treba_mora prn vbinf">
      <pattern><!-- morate ih tjerati -> мора да ги терате -->
	<pattern-item n="vb_treba_mora"/>
	<pattern-item n="prn"/>      
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="prn_adapter"><with-param pos="2"/></call-macro> 
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>   
        
	<let><clip pos="1" side="tl" part="prs"/><lit-tag v="p3"/></let>
	<let><clip pos="1" side="tl" part="nbr"/><lit-tag v="sg"/></let>    
	<out>
	  <chunk name="vb_treba_mora_prn_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>          
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b />
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>             
	      <clip pos="3" side="tl" part="asp"/>             
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="sl" part="prs"/>
	      <clip pos="1" side="sl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vb_treba_mora prn_clt prn_clt vbinf">
      <pattern><!-- morate mu ga dati tjerati -> мора да му го дадете -->
	<pattern-item n="vb_treba_mora"/>
	<pattern-item n="prn_clt"/>
	<pattern-item n="prn_clt"/>            
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="prn_adapter"><with-param pos="2"/></call-macro> 
	<call-macro n="prn_adapter"><with-param pos="3"/></call-macro> 
	<call-macro n="verb_adapter"><with-param pos="4"/></call-macro>   
        
	<let><clip pos="1" side="tl" part="prs"/><lit-tag v="p3"/></let>
	<let><clip pos="1" side="tl" part="nbr"/><lit-tag v="sg"/></let>    
	<out>
	  <chunk name="vb_treba_mora prn_clt prn_clt vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>          
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="3"/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b />
	    <lu>
	      <clip pos="4" side="tl" part="lemh"/>
	      <clip pos="4" side="tl" part="a_vrb"/>             
	      <clip pos="4" side="tl" part="asp"/>             
	      <clip pos="4" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="sl" part="prs"/>
	      <clip pos="1" side="sl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: prn_ref_pers ne_part vbmod vbinf">
      <pattern><!-- se ne može usporediti -> не може да се спореди -->
	<pattern-item n="prn_ref_pers"/>
	<pattern-item n="ne_part"/>      
	<pattern-item n="vbmod"/>
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="prn_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="4"/></call-macro>    
	<out>
	  <chunk name="prn_ref_pers_ne_part_vbmod_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>           
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <lit-tag v="vbmod.pres.p3.sg"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="3"/>           
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="4" side="tl" part="lemh"/>
	      <clip pos="4" side="tl" part="a_vrb"/>             
	      <clip pos="4" side="tl" part="asp"/>             
	      <clip pos="4" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="3" side="tl" part="prs"/>
	      <clip pos="3" side="tl" part="nbr"/>
	      <clip pos="4" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>


    <rule comment="regla: prn_ref_pers vbmod vbinf">
      <pattern><!-- se može usporediti -> може да се спореди -->
	<pattern-item n="prn_ref_pers"/>
	<pattern-item n="vbmod"/>
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="prn_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>    
	<out>
	  <chunk name="prn_ref_pers_vbmod_inf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <lit-tag v="vbmod.pres.p3.sg"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="2"/>           
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>             
	      <clip pos="3" side="tl" part="asp"/>             
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="2" side="tl" part="prs"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: verb vbinf">
      <pattern>
	<pattern-item n="verb"/>
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>        

	<out>
	  <chunk name="verb_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>        
	      <clip pos="2" side="tl" part="a_vrb"/>
	      <clip pos="2" side="tl" part="asp"/>            
	      <clip pos="2" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: verb prn vbinf">
      <pattern><!--hoćemo ga gledati => сакаме да го гледаме-->
	<pattern-item n="verb"/>
	<pattern-item n="prn"/>              
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="prn_adapter"><with-param pos="2"/></call-macro>        
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>        

	<out>
	  <chunk name="verb_prn_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>        
	      <clip pos="3" side="tl" part="a_vrb"/>
	      <clip pos="3" side="tl" part="asp"/>            
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vblex prn_clt prn_clt vbinf">
      <pattern><!--hoćemo mu ga dati => сакаме да му го дадеме-->
	<pattern-item n="verb"/>
	<pattern-item n="prn_clt"/>              
	<pattern-item n="prn_clt"/>     
	<pattern-item n="vbinf"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="prn_adapter"><with-param pos="2"/></call-macro>        
	<call-macro n="prn_adapter"><with-param pos="3"/></call-macro>        
	<call-macro n="verb_adapter"><with-param pos="4"/></call-macro>        
	<out>
	  <chunk name="verb_prn_clt_prn_clt_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="3"/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="4" side="tl" part="lemh"/>        
	      <clip pos="4" side="tl" part="a_vrb"/>
	      <clip pos="4" side="tl" part="asp"/>            
	      <clip pos="4" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="sl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>



    <rule comment="regla: ne_part vbfutI vbinf ">
      <pattern><!-- neću gledati =>  нема да гледам-->
        <pattern-item n="ne_part"/>
        <pattern-item n="vbfutI"/>
        <pattern-item n="vbinf"/>        
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
        <call-macro n="verb_adapter"><with-param pos="3"/></call-macro>

        <let><clip pos="3" side="tl" part="prs"/><clip pos="2" side="sl" part="prs"/></let>
        <let><clip pos="3" side="tl" part="nbr"/><clip pos="2" side="sl" part="nbr"/></let>        
        <out>
	  <chunk name="ne_part_vbfutI_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>                   
	    </tags>
	    <lu>
	      <lit v="нема"/>
	      <lit-tag v="vbhaver"/>
	      <lit-tag v="pres"/>
	      <lit-tag v="p3"/>
	      <lit-tag v="sg"/>                                                    
	    </lu>
	    <b pos="1"/>
	    <lu>                  
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>                  
	    <b pos="2"/>
	    <lu>           
	      <clip pos="3" side="tl" part="whole"/>             
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: ne_part vbser_past vblex_lp vbinf">
      <pattern>
        <pattern-item n="ne_part"/>
        <pattern-item n="vbser_past"/>
        <pattern-item n="vblex_lp"/>
        <pattern-item n="vbinf"/>        
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="2"/></call-macro>                
        <call-macro n="verb_adapter"><with-param pos="3"/></call-macro>                
        <call-macro n="verb_adapter"><with-param pos="4"/></call-macro>            
        <out>
	  <chunk name="ne_part_vbser_past_vblex_lp_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="3" side="tl" part="nbr"/></tag>
	      <tag><clip pos="3" side="tl" part="gen"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_adv"/>                                    
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>
	      <clip pos="3" side="tl" part="asp"/>
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="aor"/>
	      <clip pos="2" side="tl" part="prs"/>
	      <clip pos="3" side="tl" part="nbr"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	    <b pos="2"/>
	    <lu>                  
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>                  
	    <b pos="3"/>
	    <lu>                
	      <clip pos="4" side="tl" part="lemh"/>
	      <clip pos="4" side="tl" part="a_vrb"/>
	      <clip pos="4" side="tl" part="asp"/>
	      <clip pos="4" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="2" side="tl" part="prs"/>
	      <clip pos="3" side="tl" part="nbr"/> 
	      <clip pos="4" side="tl" part="lemq"/>                 
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>
    
    <rule comment="regla: vbser_past vblex_lp vbinf">
      <pattern>
        <pattern-item n="vbser_past"/>
        <pattern-item n="vblex_lp"/>
        <pattern-item n="vbinf"/>        
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="1"/></call-macro>    
        <call-macro n="verb_adapter"><with-param pos="2"/></call-macro>    
        <call-macro n="verb_adapter"><with-param pos="3"/></call-macro>            
        <out>
	  <chunk name="vbser_past_vblex_lp_vbinf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_vrb"/>
	      <clip pos="2" side="tl" part="asp"/>
	      <clip pos="2" side="tl" part="trn"/>
	      <lit-tag v="aor"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>                  
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>                  
	    <b pos="2"/>
	    <lu>                
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>
	      <clip pos="3" side="tl" part="asp"/>
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="pres"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="2" side="tl" part="nbr"/> 
	      <clip pos="3" side="tl" part="lemq"/>                 
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: vbser_past_emph li_part vb_lp">
      <pattern>
        <pattern-item n="vbser_past_emph"/>
        <pattern-item n="li_part"/>
        <pattern-item n="vb_lp"/>        
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="1"/></call-macro>    
        <call-macro n="verb_adapter"><with-param pos="3"/></call-macro>            
        <out>
	  <chunk name="vbser_past_emph_li_part_vb_lp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>
	      <clip pos="3" side="tl" part="asp"/>
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="aor"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="3" side="tl" part="nbr"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>                
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: vbser_past vblex_lp">
      <pattern>
        <pattern-item n="vbser_past"/>
        <pattern-item n="vblex_lp"/>
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="1"/></call-macro>    
        <call-macro n="verb_adapter"><with-param pos="2"/></call-macro>    
        <out>
	  <chunk name="vbser_past_vblex_lp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_vrb"/>
	      <clip pos="2" side="tl" part="asp"/>
	      <clip pos="2" side="tl" part="trn"/>
	      <lit-tag v="aor"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: vbser_past nom vblex_lp">
      <pattern>
        <pattern-item n="vbser_past"/>
        <pattern-item n="nom"/>
        <pattern-item n="vblex_lp"/>
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
        <call-macro n="noun_adapter"><with-param pos="2"/></call-macro>        
        <call-macro n="verb_adapter"><with-param pos="3"/></call-macro>
        <out>
	  <chunk name="vbser_past_nom_vblex_lp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_nom"/>
	      <clip pos="2" side="tl" part="gen" />
	      <clip pos="2" side="tl" part="nbr" />
	      <lit-tag v="nom.ind"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>
	      <clip pos="3" side="tl" part="asp"/>
	      <clip pos="3" side="tl" part="trn"/>
	      <lit-tag v="aor"/>
	      <clip pos="1" side="tl" part="prs"/>                  
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>
    
    <rule comment="regla: vblex_lp vbser_past">
      <pattern>
        <pattern-item n="vblex_lp"/>
        <pattern-item n="vbser_past"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
        <out>
	  <chunk name="vblex_lp_vbser_past" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_vrb"/>
	      <clip pos="1" side="tl" part="asp"/>
	      <clip pos="1" side="tl" part="trn"/>
	      <lit-tag v="aor"/>
	      <clip pos="2" side="tl" part="prs"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>
<!--TODO: names cleanup from here downwards-->
    <rule comment="regla: vblex_lp vbser_cond">
      <pattern>
        <pattern-item n="vblex_lp"/>
        <pattern-item n="vbser_cond"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
        <out>
	  <chunk name="vblex_lp_vbser_cond" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: kako_adv vbser_cond vb_lp">
      <pattern><!--Kako bi proslavili => За да прослават-->
        <pattern-item n="kako_adv"/>
        <pattern-item n="vbser_cond"/>
        <pattern-item n="vb_lp"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>
	
	<let>
	  <clip pos="3" side="tl" part="whole"/>
	  <concat>
            <clip pos="3" side="tl" part="lemh"/>
            <clip pos="3" side="tl" part="a_vrb"/>
            <clip pos="3" side="tl" part="asp"/>
            <clip pos="3" side="tl" part="trn"/>            
            <lit-tag v="pres"/>
            <clip pos="2" side="sl" part="prs"/>            
            <clip pos="3" side="tl" part="nbr"/>            
            <clip pos="3" side="tl" part="lemq"/>
	  </concat>
	</let>
        <out>
	  <chunk name="kako_adv_vbser_cond_vb_lp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="3" side="tl" part="gen"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>   
	    </tags>                
	    <lu>
	      <lit v="за"/>
	      <lit-tag v="pr"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <lit v="да"/>
	      <lit-tag v="part"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>


    <rule comment="regla: vbser_cond vblex_lp ">
      <pattern>
        <pattern-item n="vbser_cond"/>
        <pattern-item n="vblex_lp"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>
        <out>
	  <chunk name="vbser_cond_vblex_lp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: vbser_lp vbser_past">
      <pattern>
        <pattern-item n="vbser_lp"/>
        <pattern-item n="vbser_past"/>
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
        <call-macro n="verb_adapter"><with-param pos="2"/></call-macro>        
        <out>
	  <chunk name="vbser_lp_vbser_past" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="2" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>                   
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_vrb"/>
	      <clip pos="1" side="tl" part="asp"/>
	      <clip pos="1" side="tl" part="trn"/>
	      <lit-tag v="pii"/>
	      <clip pos="2" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: ne_part">
      <pattern>
	<pattern-item n="ne_part"/>
      </pattern>
      <action>
	<out>
	  <chunk name="ne_part" case="caseFirstWord">        
	    <tags>
	      <tag><lit-tag v="Part"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: vbpp">
      <pattern>
	<pattern-item n="vbpp"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<out>
	  <chunk name="vbpp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="tns"/></tag>
              <tag><clip pos="1" side="tl" part="prs"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
              <clip pos="1" side="tl" part="a_vrb"/>
              <clip pos="1" side="tl" part="asp"/>
              <clip pos="1" side="tl" part="trn"/>
              <clip pos="1" side="tl" part="tns"/>
              <lit-tag v="pp"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <lit-tag v="ind"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: vbhtjeti li_part infinitive">
      <pattern>
	<pattern-item n="vbhtjeti"/>
	<pattern-item n="li_part"/>
	<pattern-item n="vbinf"/>                     
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>     
	<choose>
	  <when>
            <test>
	      <equal caseless="yes"><clip pos="3" side="tl" part="a_vrb"/><lit-tag v="vbser"/></equal>
            </test>
            <let><clip pos="3" side="tl" part="trn"/><lit v=""/></let>
	  </when>
	</choose>
	<out>
	  <chunk name="vbhtjeti_li_inf" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="tns"/></tag>
              <tag><clip pos="1" side="tl" part="prs"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>           
              <lit v="дали"/>
              <lit-tag v="part"/>
            </lu>
            <b pos="1"/>
            <lu>           
              <lit v="ќе"/>
              <lit-tag v="part"/>
            </lu>              
            <b/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_vrb"/>
              <clip pos="3" side="tl" part="asp"/>
              <clip pos="3" side="tl" part="trn"/>
              <lit-tag v="pres"/>
              <clip pos="1" side="tl" part="prs"/>              
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: vbser_past adv vb_lp">
      <pattern>
	<pattern-item n="vbser_past"/>
	<pattern-item n="adv"/>       
	<pattern-item n="vb_lp"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="adv_adapter"><with-param pos="2"/></call-macro>     
	<call-macro n="verb_adapter"><with-param pos="3"/></call-macro>     
	<out>
	  <chunk name="vbser_adv_lp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="tns"/></tag>
              <tag><clip pos="1" side="tl" part="prs"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
	      <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b/>
            <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_vrb"/>
	      <clip pos="3" side="tl" part="asp"/>
	      <clip pos="3" side="tl" part="trn"/>                
	      <lit-tag v="aor"/>
	      <clip pos="1" side="tl" part="prs"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <clip pos="3" side="tl" part="lemq"/>                
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="regla: verb">
      <pattern>
        <pattern-item n="verb"/>
      </pattern>
      <action>
        <call-macro n="verb_adapter"><with-param pos="1"/></call-macro>     
        <choose>        
	  <when>
	    <test>
	      <and>
		<or>
		  <equal><clip pos="1" side="tl" part="tns"/><lit-tag v="lp.pii"/></equal>       
		  <equal><clip pos="1" side="tl" part="tns"/><lit-tag v="lp.aor"/></equal>                           
		</or>                    
		<not><equal><var n="conditional"/><lit v="True"/></equal></not>
		<not><equal><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbser"/></equal></not>                        
	      </and>
	    </test>
	    <let><!--The idea would be to transfer number/person from the last seen clitic vbser, and turn this into aorist -->
	      <clip pos="1" side="tl" part="whole"/>            
	      <concat>
		<clip pos="1" side="tl" part="lemh"/>
		<clip pos="1" side="tl" part="a_vrb"/>              
		<clip pos="1" side="tl" part="asp"/>                            
		<clip pos="1" side="tl" part="trn"/>                            
		<lit-tag v="aor"/>        
		<var n="persona"/>
		<var n="numero"/>                            
		<clip pos="1" side="tl" part="lemq"/>
	      </concat>
	    </let>
	  </when>
	  <when>
	    <test>
	      <and>
		<equal><clip pos="1" side="sl" part="tns"/><lit-tag v="lp"/></equal>       
		<not><equal><var n="conditional"/><lit v="True"/></equal></not>
		<equal><clip pos="1" side="sl" part="a_vrb"/><lit-tag v="vbser"/></equal>       
		<equal><clip pos="1" side="sl" part="tns"/><lit-tag v="lp"/></equal>
	      </and>
	    </test>
	    <let><!--The idea would be to transfer number/person from the last seen clitic vbser, and turn this into aorist -->
	      <clip pos="1" side="tl" part="whole"/>            
	      <concat>
		<lit v="е"/>
		<lit-tag v="vbser"/>
		<lit-tag v="pii"/>
		<var n="persona"/>
		<var n="numero"/>                            
	      </concat>
	    </let>
	  </when>
        </choose>
	<out>
	  <chunk name="verb" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
	      <tag><clip pos="1" side="tl" part="tns"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>      
      </action>
    </rule>
    

    <rule comment="regla: vbser_lp vbser_past">
      <pattern>
	<pattern-item n="vbser_lp"/>
	<pattern-item n="vbser_past"/>
      </pattern>
      <action>
	<call-macro n="verb_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="verb_adapter"><with-param pos="2"/></call-macro>                           
	
	<let><var n="numero"/><clip pos="2" side="tl" part="nbr"/></let>
	<let><var n="persona"/><clip pos="2" side="tl" part="prs"/></let>     
	
	<out>
	  <chunk name="vbserlp_vbserpast" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SV"/></tag>
              <tag><clip pos="1" side="tl" part="tns"/></tag>
              <tag><clip pos="1" side="tl" part="prs"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_vrb"/>
              <clip pos="1" side="tl" part="asp"/>
              <clip pos="1" side="tl" part="trn"/>
              <clip pos="1" side="tl" part="tns"/>
              <clip pos="1" side="tl" part="prs"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_vrb"/>
              <clip pos="2" side="tl" part="asp"/>
              <clip pos="2" side="tl" part="trn"/>
              <clip pos="2" side="tl" part="tns"/>
              <clip pos="2" side="tl" part="prs"/>
              <clip pos="2" side="tl" part="gen"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <!-- Nominal sintagms -->
    <rule comment="regla: NP">
      <pattern>
	<pattern-item n="np_gen"/>
      </pattern>
      <action>
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>    
	<out>
	  <chunk name="np" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	      <tag><clip pos="1" side="sl" part="fnc"/></tag>                                                                                         
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: N">
      <pattern>
	<pattern-item n="nom"/>
      </pattern>
      <action>
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>    
	<out>
	  <chunk name="nom" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="ind"/></tag>
	      <tag><clip pos="1" side="sl" part="fnc"/></tag>                                                   
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_nom"/>             
	      <clip pos="1" side="tl" part="gen"/>             
	      <clip pos="1" side="tl" part="nbr"/>             
	      <clip pos="1" side="tl" part="cas"/>             
	      <clip pos="1" side="tl" part="def" link-to="5"/>             
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: Adj">
      <pattern>
	<pattern-item n="adj"/>
      </pattern>
      <action>
	<call-macro n="adj_adapter"><with-param pos="1"/></call-macro>
	<!--let><clip pos="1" side="tl" part="gen"/><var n="genNom"/></let-->
	<out>
	  <chunk name="adj" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SA"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="sl" part="def"/></tag>                                       
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: Adv">
      <pattern>
	<pattern-item n="adv"/>
      </pattern>
      <action>
	<call-macro n="adv_adapter"><with-param pos="1"/></call-macro>
	<out>
	  <chunk name="adj" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SA"/></tag>
	      <tag><clip pos="1" side="tl" part="a_adv"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>


    <rule comment="regla: np_possesive_adjective noun">
      <pattern><!--NOTE: There is a rule below to match a possesive adjective standing alone, to catch unknown words. TODO: Check if it should be translated as prepositional genitive or a possesive adjective, also there currently are no possesive adjectives in mk-->
	<pattern-item n="np"/>
	<pattern-item n="adj_pss_sfx"/>
	<pattern-item n="nom_or_np"/>       
      </pattern>
      <action>
	<call-macro n="adj_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="noun_adapter"><with-param pos="3"/></call-macro>        
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>               

	<let><clip pos="3" side="tl" part="def"/><lit-tag v="def"/></let>
	<let><clip pos="1" side="tl" part="def"/><lit-tag v="ind"/></let>       
	<out>
	  <chunk name="adjp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="sl" part="gen"/></tag>
	      <tag><clip pos="2" side="sl" part="nbr"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	      <tag><clip pos="3" side="sl" part="fnc"/></tag>
	    </tags>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <lit v="на"/>
	      <lit-tag v="pr"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_nom"/>             
	      <clip pos="1" side="tl" part="gen"/>                          
	      <lit-tag v="sg.nom"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: np_possesive_adjective">
      <pattern><!--NOTE: This is a rule to match a possesive adjective standing alone. TODO: Check if it should be translated as prepositional genitive or a possesive adjective, also there currently are no possesive adjectives in mk-->
	<pattern-item n="np"/>
	<pattern-item n="adj_pss_sfx"/>
      </pattern>
      <action>
	<call-macro n="adj_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>               

	<out>
	  <chunk name="adjp" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="sl" part="gen"/></tag>
	      <tag><clip pos="2" side="sl" part="nbr"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="ind"/></tag><!--TODO: maybe this is a good idea-->
	      <tag><clip pos="2" side="sl" part="fnc"/></tag>                          
	    </tags>
	    <lu>
	      <lit v="на"/>
	      <lit-tag v="pr"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_nom"/>             
	      <clip pos="1" side="tl" part="gen"/>                          
	      <lit-tag v="sg.nom"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: adj nom np">
      <pattern>
	<pattern-item n="adj"/>
	<pattern-item n="nom"/>
	<pattern-item n="np"/>
      </pattern>
      <action>
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>    
	<call-macro n="adjust_headword_agreement"><with-param pos="2"/><with-param pos="1"/></call-macro>    
	<call-macro n="adj_adapter"><with-param pos="1"/></call-macro>    

	<!-- let><clip pos="1" side="tl" part="def"/><lit-tag v="def"/></let> Note and TODO: this is cheating :) do smtn about this-->
	
	<out>
	  <chunk name="adj_n_np" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_adj"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <lit-tag v="nom.def"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_nom"/>
	      <clip pos="2" side="tl" part="gen"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <lit-tag v="nom.ind"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_nom"/>
	      <clip pos="3" side="tl" part="gen"/>
	      <clip pos="3" side="tl" part="nbr"/>
	      <lit-tag v="nom"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>
    
    <rule comment="regla: nom np">
      <pattern>
	<pattern-item n="nom"/>
	<pattern-item n="np_nom_non_cog_ant"/>
      </pattern>
      <action>
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>    
	<call-macro n="noun_adapter"><with-param pos="2"/>
	</call-macro>    
	<out>
	  <chunk name="n_np" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_nom"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <lit-tag v="nom.def"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_nom"/>
	      <clip pos="2" side="tl" part="gen"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <lit-tag v="nom"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>
    
    <rule comment="regla: adj np">
      <pattern>    
	<pattern-item n="adj"/>
	<pattern-item n="np"/>
      </pattern>
      <action>
	<call-macro n="noun_adapter"><with-param pos="2"/></call-macro>
	<call-macro n="adjust_headword_agreement"><with-param pos="2"/><with-param pos="1"/></call-macro>    
	<call-macro n="adj_adapter"><with-param pos="1"/></call-macro>    
	<out>
	  <chunk name="adj_np" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="sl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_nom"/>
	      <clip pos="2" side="tl" part="gen"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <lit-tag v="nom"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>
    
    <rule comment="regla: adj nom">
      <pattern> 
	<pattern-item n="adj"/>
	<pattern-item n="nom"/>
      </pattern>
      <action>
	<call-macro n="adjust_headword_agreement"><with-param pos="2"/><with-param pos="1"/></call-macro>    
	<call-macro n="adj_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>       
	<out>
	  <chunk name="adj_n" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="sl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_nom"/>
	      <clip pos="2" side="tl" part="gen"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <lit-tag v="nom.ind"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: num adj adj nom">
      <pattern> 
	<pattern-item n="num"/>
	<pattern-item n="adj"/>
	<pattern-item n="adj"/>       
	<pattern-item n="nom"/>
      </pattern>
      <action>
	<call-macro n="num_phrase_agreement"><with-param pos="1"/><with-param pos="2"/></call-macro>
	<call-macro n="num_phrase_agreement"><with-param pos="1"/><with-param pos="3"/></call-macro>
	<call-macro n="num_phrase_agreement"><with-param pos="1"/><with-param pos="4"/></call-macro>                                                         
	<call-macro n="num_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="adj_adapter"><with-param pos="2"/></call-macro> 
	<call-macro n="adj_adapter"><with-param pos="3"/></call-macro>        
	<call-macro n="noun_adapter"><with-param pos="4"/></call-macro>     
	<let><clip pos="2" side="tl" part="def"/><lit-tag v="ind"/></let>
	<let><clip pos="3" side="tl" part="def"/><lit-tag v="ind"/></let>       
	<out>
	  <chunk name="num_adj_adj_n" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><lit-tag v="pl"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="tl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="4" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: num adj nom">
      <pattern> 
	<pattern-item n="num"/>
	<pattern-item n="adj"/>
	<pattern-item n="nom"/>
      </pattern>
      <action>
	<call-macro n="num_phrase_agreement"><with-param pos="1"/><with-param pos="2"/></call-macro>
	<call-macro n="num_phrase_agreement"><with-param pos="1"/><with-param pos="3"/></call-macro>                         
	<call-macro n="num_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="adj_adapter"><with-param pos="2"/></call-macro> 
	<call-macro n="noun_adapter"><with-param pos="3"/></call-macro>     
	<let><clip pos="2" side="tl" part="def"/><lit-tag v="ind"/></let>
	<out>
	  <chunk name="num_adj_n" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><lit-tag v="pl"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="tl" part="def"/></tag>             
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_num"/>
	      <clip pos="3" side="tl" part="gen"/>
	      <clip pos="3" side="tl" part="nbr"/>
	      <lit-tag v="nom"/>
	      <clip pos="2" side="tl" part="def"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="3" side="tl" part="lemh"/>
	      <clip pos="3" side="tl" part="a_nom"/>
	      <clip pos="3" side="tl" part="gen"/>
	      <clip pos="3" side="tl" part="nbr"/>
	      <lit-tag v="nom.ind"/>
	      <clip pos="3" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: ord nom">
      <pattern> 
	<pattern-item n="ord"/>
	<pattern-item n="nom"/>
      </pattern>
      <action>                     
	<call-macro n="adjust_headword_agreement"><with-param pos="2"/><with-param pos="1"/></call-macro>    
	<call-macro n="mima_to_m"><with-param pos="1"/></call-macro>    
	<call-macro n="to_mfn"><with-param pos="1"/></call-macro>           
	<call-macro n="noun_adapter"><with-param pos="2"/></call-macro>
	<choose>
	  <when>
	    <test>
	      <equal caseless="yes"><clip pos="1" side="sl" part="def"/><lit-tag v="ind"/></equal>
	    </test>
	    <let>
	      <clip pos="1" side="tl" part="whole"/>                            
	      <concat>
		<clip pos="1" side="tl" part="lemh"/>
		<clip pos="1" side="tl" part="a_num"/>
		<lit-tag v="nom.ind"/>          
		<clip pos="1" side="tl" part="lemq"/>
	      </concat>
	    </let>
	  </when>
	  <otherwise>
	    <let>
	      <clip pos="1" side="tl" part="whole"/>
	      <concat>
		<clip pos="1" side="tl" part="lemh"/>
		<clip pos="1" side="tl" part="a_num"/>
		<clip pos="2" side="tl" part="gen"/>
		<clip pos="2" side="tl" part="nbr"/>
		<lit-tag v="nom.def"/>          
		<clip pos="1" side="tl" part="lemq"/>
	      </concat>
	    </let>           
	  </otherwise>           
	</choose>
	<out>
	  <chunk name="ord_n" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>
	      <tag><clip pos="2" side="tl" part="nbr"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
            <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_nom"/>
	      <clip pos="2" side="tl" part="gen"/>
	      <clip pos="2" side="tl" part="nbr"/>
	      <lit-tag v="nom.ind"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>


    <rule comment="regla: ord num">
      <pattern><!--TODO: Check if it's ok-->
	<pattern-item n="ord"/>
	<pattern-item n="num"/>       
      </pattern>
      <action>
        <call-macro n="num_adapter"><with-param pos="1"/></call-macro>        
        <call-macro n="num_adapter"><with-param pos="2"/></call-macro>                
        <out>
	  <chunk name="ord_num" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lem"/>
	      <clip pos="1" side="tl" part="a_num"/>
	      <clip pos="1" side="tl" part="gen" />
	      <clip pos="1" side="tl" part="nbr" />
	      <lit-tag v="nom.def"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lem"/>
	      <clip pos="2" side="tl" part="a_num"/>
	      <clip pos="2" side="tl" part="gen" />
	      <clip pos="2" side="tl" part="nbr" />
	      <lit-tag v="nom.ind"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: ord vbser">
      <pattern>
	<pattern-item n="ord"/>
	<pattern-item n="vbser"/>       
      </pattern>
      <action>
        <call-macro n="num_adapter"><with-param pos="1"/></call-macro>               
        <call-macro n="verb_adapter"><with-param pos="2"/></call-macro>                
        <out>
	  <chunk name="ord_vbser" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: adj vbser">
      <pattern>
	<pattern-item n="adj"/>
	<pattern-item n="vbser"/>       
      </pattern>
      <action>
        <call-macro n="adj_adapter"><with-param pos="1"/></call-macro>               
        <call-macro n="verb_adapter"><with-param pos="2"/></call-macro>                
        <out>
	  <chunk name="ord_vbser" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: num">
      <pattern>
	<pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="num_adapter"><with-param pos="1"/></call-macro>
        <out>
	  <chunk name="num" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><lit-tag v="pl"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="tl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>  

    <rule comment="regla: num nom">
      <pattern>
	<pattern-item n="num"/>
	<pattern-item n="nom"/>
      </pattern>
      <action>
	<call-macro n="num_adapter"><with-param pos="1"/></call-macro>               
	<call-macro n="num_phrase_agreement"><with-param pos="1"/><with-param pos="2"/></call-macro>
	<call-macro n="noun_adapter"><with-param pos="2"/></call-macro>               

	<out>
	  <chunk name="num_nom" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>
	      <tag><lit-tag v="pl"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="tl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_nom"/>
	      <clip pos="2" side="tl" part="gen" />
	      <clip pos="2" side="tl" part="nbr" />
	      <lit-tag v="nom.ind"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: ord num adj nom">
      <pattern> 
	<pattern-item n="ord"/>
	<pattern-item n="num"/>
	<pattern-item n="adj"/>
	<pattern-item n="nom"/>
      </pattern>
      <action>
	<call-macro n="num_phrase_agreement"><with-param pos="2"/><with-param pos="1"/></call-macro>
	<call-macro n="num_phrase_agreement"><with-param pos="2"/><with-param pos="3"/></call-macro>
	<call-macro n="num_phrase_agreement"><with-param pos="2"/><with-param pos="4"/></call-macro>                     

	<call-macro n="num_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="num_adapter"><with-param pos="2"/></call-macro>

	<call-macro n="adj_adapter"><with-param pos="3"/></call-macro>
	<call-macro n="noun_adapter"><with-param pos="4"/></call-macro>       
	<let><clip pos="3" side="tl" part="def"/><lit-tag v="ind"/></let>        
	<out>
	  <chunk name="ord_num_adj_n" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="2" side="tl" part="gen"/></tag>
	      <tag><lit-tag v="pl"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="tl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_num"/>
	      <clip pos="1" side="tl" part="gen"/>
	      <clip pos="1" side="tl" part="nbr"/>
	      <lit-tag v="nom.def"/>
	      <clip pos="1" side="tl" part="lemq"/>
	    </lu>
            <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="lemh"/>
	      <clip pos="2" side="tl" part="a_num"/>
	      <clip pos="2" side="tl" part="gen"/>             
	      <lit-tag v="nom.ind"/>
	      <clip pos="2" side="tl" part="lemq"/>
	    </lu>
	    <b pos="2"/>
	    <lu>
	      <clip pos="3" side="tl" part="whole"/>
	    </lu>
	    <b pos="3"/>
	    <lu>
	      <clip pos="4" side="tl" part="lemh"/>
	      <clip pos="4" side="tl" part="a_nom"/>
	      <clip pos="4" side="tl" part="gen"/>
	      <clip pos="4" side="tl" part="nbr"/>
	      <lit-tag v="nom.ind"/>
	      <clip pos="4" side="tl" part="lemq"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: dem num adj nom">
      <pattern>
	<pattern-item n="prn_dem"/>
	<pattern-item n="num"/>
	<pattern-item n="adj"/>
	<pattern-item n="nom"/>
      </pattern>
      <action>
	<call-macro n="num_phrase_agreement"><with-param pos="2"/><with-param pos="4"/></call-macro>    
	<call-macro n="num_phrase_agreement"><with-param pos="2"/><with-param pos="3"/></call-macro>    
	<call-macro n="num_phrase_agreement"><with-param pos="2"/><with-param pos="1"/></call-macro>    
	
	<call-macro n="prn_adapter"><with-param pos="1"/></call-macro>    
	<call-macro n="adj_adapter"><with-param pos="3"/></call-macro>       
	<call-macro n="num_adapter"><with-param pos="2"/></call-macro>              
	<call-macro n="noun_adapter"><with-param pos="4"/></call-macro>    

	<let><clip pos="3" side="tl" part="def"/><lit-tag v="ind"/></let>
	<let><clip pos="4" side="tl" part="def"/><lit-tag v="ind"/></let>       

	<call-macro n="article_assign"><with-param pos="1"/><with-param pos="2"/></call-macro>    
	
	<out>
	  <chunk name="numdef_a_n" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="4" side="tl" part="gen"/></tag>
	      <tag><lit-tag v="pl"/></tag>
	      <tag><clip pos="2" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="def"/></tag>
	    </tags>
	    <lu><clip pos="2" side="tl" part="whole"/></lu>
	    <b pos="1"/>
	    <lu><clip pos="3" side="tl" part="whole"/></lu>
	    <b pos="2"/>
	    <lu><clip pos="4" side="tl" part="whole"/></lu>
	  </chunk>
	</out>
      </action>
    </rule>
    
    <rule comment="regla: nom_or_np">
      <pattern>
	<pattern-item n="nom_or_np"/>
      </pattern>
      <action>
	<call-macro n="noun_adapter"><with-param pos="1"/></call-macro>
	<out>
	  <chunk name="nom" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><lit-tag v="ind"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: prn nom">
      <pattern>
	<pattern-item n="prn"/>
	<pattern-item n="nom"/>       
      </pattern>
      <action>
	<let><clip pos="1" side="tl" part="gen"/><clip pos="2" side="tl" part="gen"/></let>
	<call-macro n="prn_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="noun_adapter"><with-param pos="2"/></call-macro>                     
	<let><clip pos="1" side="tl" part="def"/><lit-tag v="def"/></let>
	<out>
	  <chunk name="prn_n" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="tl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b pos="1"/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>             
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>
    
    <rule comment="regla: dem nom">
      <pattern>
	<pattern-item n="prn_dem"/>
	<pattern-item n="nom"/>       
      </pattern>
      <action>
	<let><clip pos="1" side="tl" part="gen"/><clip pos="2" side="tl" part="gen"/></let>       
	<call-macro n="prn_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="noun_adapter"><with-param pos="2"/></call-macro>                     
	<call-macro n="article_assign"><with-param pos="1"/><with-param pos="2"/></call-macro>                     
	<out>
	  <chunk name="n_def" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="2" side="tl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>             
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: ngen ngen"><!-- ... {smjera<n><gen> zrakoplovstva<n><gen>} -->
      <pattern><!--Genitive phrases like these need more work, this is just a sketch-->
        <pattern-item n="nom_gen"/>
        <pattern-item n="nom_gen"/>        
      </pattern>
      <action>
        <call-macro n="noun_adapter"><with-param pos="1"/></call-macro>
        <call-macro n="noun_adapter"><with-param pos="2"/></call-macro>              
	<out>
	  <chunk name="ngen_ngen" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SN"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><lit-tag v="gen.ind"/></tag>
	      <tag><clip pos="1" side="sl" part="fnc"/></tag>             
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>             
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>             
	    </lu>
	  </chunk>
	</out>        
        
      </action>    
    </rule>

    <rule comment="regla: prn adj">
      <pattern>
	<pattern-item n="prn"/>
	<pattern-item n="adj"/>       
      </pattern>
      <action>     
	<call-macro n="prn_adapter"><with-param pos="1"/></call-macro>
	<call-macro n="adj_adapter"><with-param pos="2"/></call-macro>                            
	<let><clip pos="2" side="tl" part="def"/><lit-tag v="ind"/></let>
	<out>
	  <chunk name="prn_adj" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SPrn"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	      <tag><clip pos="1" side="tl" part="def"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	    <b/>
	    <lu>
	      <clip pos="2" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>  

    <rule comment="regla: prn">
      <pattern>
	<pattern-item n="prns"/>
      </pattern>
      <action>
	<call-macro n="prn_adapter"><with-param pos="1"/></call-macro>       
	<out>
	  <chunk name="prn" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="SPrn"/></tag>
	      <tag><clip pos="1" side="tl" part="prs"/></tag>
	      <tag><clip pos="1" side="tl" part="gen"/></tag>
	      <tag><clip pos="1" side="tl" part="nbr"/></tag>
	      <tag><clip pos="1" side="sl" part="cas"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="whole"/>
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>

    <rule comment="regla: pr">
      <pattern>
	<pattern-item n="pr"/>
      </pattern>
      <action>
	<out>
	  <chunk name="pr" case="caseFirstWord">
	    <tags>
	      <tag><lit-tag v="PR"/></tag>
	      <tag><clip pos="1" side="tl" part="a_prp"/></tag>
	    </tags>
	    <lu>
	      <clip pos="1" side="tl" part="lemh"/>
	      <clip pos="1" side="tl" part="a_prp"/>
	      <clip pos="1" side="tl" part="lemq"/>             
	    </lu>
	  </chunk>
	</out>
      </action>
    </rule>
    
    <!-- end Nominal sintagms -->

  </section-rules>

</transfer>
